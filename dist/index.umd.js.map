{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["// Defaults\nconst defaultOptions = {\n  format: \"image/png\",\n  quality: 0.92,\n  width: undefined,\n  height: undefined,\n  Canvas: undefined\n};\n\n// Return Promise\nconst mergeImages = (sources = [], options = {}) =>\n  new Promise(resolve => {\n    options = Object.assign({}, defaultOptions, options);\n\n    // Setup browser/Node.js specific variables\n    const canvas = options.Canvas\n      ? new options.Canvas.createCanvas()\n      : window.document.createElement(\"canvas\");\n    const Image = options.Canvas ? options.Canvas.Image : window.Image;\n    if (options.Canvas) {\n      options.quality *= 100;\n    }\n\n    // Load sources\n    const images = sources.map(\n      source =>\n        new Promise((resolve, reject) => {\n          // Convert sources to objects\n          if (source.constructor.name !== \"Object\") {\n            source = { src: source };\n          }\n\n          // Resolve source and img when loaded\n          const img = new Image();\n          img.onerror = () => reject(new Error(\"Couldn't load image\"));\n          img.onload = () => resolve(Object.assign({}, source, { img }));\n          img.src = source.src;\n        })\n    );\n\n    // Get canvas context\n    const ctx = canvas.getContext(\"2d\");\n\n    // When sources have loaded\n    resolve(\n      Promise.all(images).then(images => {\n        // Set canvas dimensions\n        const getSize = dim =>\n          options[dim] || Math.max(...images.map(image => image.img[dim]));\n        canvas.width = getSize(\"width\");\n        canvas.height = getSize(\"height\");\n\n        // Draw images to canvas\n        images.forEach(image => {\n          ctx.globalAlpha = image.opacity ? image.opacity : 1;\n          return ctx.drawImage(image.img, image.x || 0, image.y || 0);\n        });\n\n        if (options.Canvas && options.format === \"image/jpeg\") {\n          // Resolve data URI for node-canvas jpeg async\n          return new Promise(resolve => {\n            canvas.toDataURL(\n              options.format,\n              {\n                quality: options.quality,\n                progressive: false\n              },\n              (err, jpeg) => {\n                if (err) {\n                  throw err;\n                }\n                resolve(jpeg);\n              }\n            );\n          });\n        }\n\n        // Resolve all other data URIs sync\n        return canvas.toDataURL(options.format, options.quality);\n      })\n    );\n  });\n\nmodule.exports = mergeImages;\n"],"names":["const"],"mappings":"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"}